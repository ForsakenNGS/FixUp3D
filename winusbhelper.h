/*
 * winusbhelper.h
 *
 *  Created on: 18.01.2015
 *      Author: stohn
 */

#ifndef WINUSBHELPER_H_
#define WINUSBHELPER_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <windows.h>

typedef HANDLE WINUSB_INTERFACE_HANDLE, *PWINUSB_INTERFACE_HANDLE;

typedef struct _WINUSB_SETUP_PACKET {
  UCHAR RequestType;
  UCHAR Request;
  USHORT Value;
  USHORT Index;
  USHORT Length;
} WINUSB_SETUP_PACKET, *PWINUSB_SETUP_PACKET;

#include <pshpack1.h>
typedef struct _USB_INTERFACE_DESCRIPTOR {
  UCHAR bLength;
  UCHAR bDescriptorType;
  UCHAR bInterfaceNumber;
  UCHAR bAlternateSetting;
  UCHAR bNumEndpoints;
  UCHAR bInterfaceClass;
  UCHAR bInterfaceSubClass;
  UCHAR bInterfaceProtocol;
  UCHAR iInterface;
} USB_INTERFACE_DESCRIPTOR, *PUSB_INTERFACE_DESCRIPTOR;
typedef struct _USB_CONFIGURATION_DESCRIPTOR {
  UCHAR bLength;
  UCHAR bDescriptorType;
  USHORT wTotalLength;
  UCHAR bNumInterfaces;
  UCHAR bConfigurationValue;
  UCHAR iConfiguration;
  UCHAR bmAttributes;
  UCHAR MaxPower;
} USB_CONFIGURATION_DESCRIPTOR, *PUSB_CONFIGURATION_DESCRIPTOR;
typedef struct _USB_COMMON_DESCRIPTOR {
  UCHAR bLength;
  UCHAR bDescriptorType;
} USB_COMMON_DESCRIPTOR, *PUSB_COMMON_DESCRIPTOR;
#include <poppack.h>

typedef enum _USBD_PIPE_TYPE {
  UsbdPipeTypeControl,
  UsbdPipeTypeIsochronous,
  UsbdPipeTypeBulk,
  UsbdPipeTypeInterrupt
} USBD_PIPE_TYPE;

typedef struct _WINUSB_PIPE_INFORMATION {
  USBD_PIPE_TYPE PipeType;
  UCHAR PipeId;
  USHORT MaximumPacketSize;
  UCHAR Interval;
} WINUSB_PIPE_INFORMATION, *PWINUSB_PIPE_INFORMATION;

typedef BOOL (WINAPI *WINUSB_ABORT_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR);
extern WINUSB_ABORT_PIPE WinUsb_AbortPipe;

typedef BOOL (WINAPI *WINUSB_CONTROL_TRANSFER)(WINUSB_INTERFACE_HANDLE,WINUSB_SETUP_PACKET,PUCHAR,ULONG,PULONG,LPOVERLAPPED);
extern WINUSB_CONTROL_TRANSFER WinUsb_ControlTransfer;

typedef BOOL (WINAPI *WINUSB_FLUSH_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR);
extern WINUSB_FLUSH_PIPE WinUsb_FlushPipe;

typedef BOOL (WINAPI *WINUSB_FREE)(WINUSB_INTERFACE_HANDLE);
extern WINUSB_FREE WinUsb_Free;

typedef BOOL (WINAPI *WINUSB_GET_ASSOCIATED_INTERFACE)(WINUSB_INTERFACE_HANDLE,UCHAR,PWINUSB_INTERFACE_HANDLE);
extern WINUSB_GET_ASSOCIATED_INTERFACE WinUsb_GetAssociatedInterface;

typedef BOOL (WINAPI *WINUSB_GET_CURRENT_ALTERNATE_SETTING)(WINUSB_INTERFACE_HANDLE,PUCHAR);
extern WINUSB_GET_CURRENT_ALTERNATE_SETTING WinUsb_GetCurrentAlternateSetting;

typedef BOOL (WINAPI *WINUSB_GET_DESCRIPTOR)(WINUSB_INTERFACE_HANDLE,UCHAR,UCHAR,USHORT,PUCHAR,ULONG,PULONG);
extern WINUSB_GET_DESCRIPTOR WinUsb_GetDescriptor;

typedef BOOL (WINAPI *WINUSB_GET_OVERLAPPED_RESULT)(WINUSB_INTERFACE_HANDLE,LPOVERLAPPED,LPDWORD,BOOL);
extern WINUSB_GET_OVERLAPPED_RESULT WinUsb_GetOverlappedResult;

typedef BOOL (WINAPI *WINUSB_GET_PIPE_POLICY)(WINUSB_INTERFACE_HANDLE,UCHAR,ULONG,PULONG,PVOID);
extern WINUSB_GET_PIPE_POLICY WinUsb_GetPipePolicy;

typedef BOOL (WINAPI *WINUSB_GET_POWER_POLICY)(WINUSB_INTERFACE_HANDLE,ULONG,PULONG,PVOID);
extern WINUSB_GET_POWER_POLICY WinUsb_GetPowerPolicy;

typedef BOOL (WINAPI *WINUSB_INITIALIZE)(HANDLE,PWINUSB_INTERFACE_HANDLE);
extern WINUSB_INITIALIZE WinUsb_Initialize;

typedef PUSB_INTERFACE_DESCRIPTOR (WINAPI *WINUSB_PARSE_CONFIGURATION_DESCRIPTOR)(PUSB_CONFIGURATION_DESCRIPTOR, PVOID, LONG, LONG, LONG, LONG, LONG);
extern WINUSB_PARSE_CONFIGURATION_DESCRIPTOR WinUsb_ParseConfigurationDescriptor;

typedef PUSB_COMMON_DESCRIPTOR (WINAPI *WINUSB_PARSE_DESCRIPTORS)(PVOID, ULONG, PVOID, LONG);
extern WINUSB_PARSE_DESCRIPTORS WinUsb_ParseDescriptors;

typedef BOOL (WINAPI *WINUSB_QUERY_DEVICE_INFORMATION)(WINUSB_INTERFACE_HANDLE,ULONG,PULONG,PVOID);
extern WINUSB_QUERY_DEVICE_INFORMATION WinUsb_QueryDeviceInformation;

typedef BOOL (WINAPI *WINUSB_QUERY_INTERFACE_SETTINGS)(WINUSB_INTERFACE_HANDLE,UCHAR,PUSB_INTERFACE_DESCRIPTOR);
extern WINUSB_QUERY_INTERFACE_SETTINGS WinUsb_QueryInterfaceSettings;

typedef BOOL (WINAPI *WINUSB_QUERY_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR,UCHAR,PWINUSB_PIPE_INFORMATION);
extern WINUSB_QUERY_PIPE WinUsb_QueryPipe;

typedef BOOL (WINAPI *WINUSB_READ_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR,PUCHAR,ULONG,PULONG,LPOVERLAPPED);
extern WINUSB_READ_PIPE WinUsb_ReadPipe;

typedef BOOL (WINAPI *WINUSB_RESET_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR);
extern WINUSB_RESET_PIPE WinUsb_ResetPipe;

typedef BOOL (WINAPI *WINUSB_SET_CURRENT_ALTERNATE_SETTING)(WINUSB_INTERFACE_HANDLE,UCHAR);
extern WINUSB_SET_CURRENT_ALTERNATE_SETTING WinUsb_SetCurrentAlternateSetting;

typedef BOOL (WINAPI *WINUSB_SET_PIPE_POLICY)(WINUSB_INTERFACE_HANDLE,UCHAR,ULONG,ULONG,PVOID);
extern WINUSB_SET_PIPE_POLICY WinUsb_SetPipePolicy;

typedef BOOL (WINAPI *WINUSB_SET_POWER_POLICY)(WINUSB_INTERFACE_HANDLE,ULONG,ULONG,PVOID);
extern WINUSB_SET_POWER_POLICY WinUsb_SetPowerPolicy;

typedef BOOL (WINAPI *WINUSB_WRITE_PIPE)(WINUSB_INTERFACE_HANDLE,UCHAR,PUCHAR,ULONG,PULONG,LPOVERLAPPED);
extern WINUSB_WRITE_PIPE WinUsb_WritePipe;

BOOL DynLoadSystemWinUSB();

BOOL DynUnloadSystemWinUSB();

#ifdef __cplusplus
}
#endif

#endif /* WINUSBHELPER_H_ */
